/**
 * This code was generated by "react-native codegen-harmony"
 *
 * Do not edit this file as changes may cause incorrect behavior and will be
 * lost once the code is regenerated.
 *
 * @generatorVersion: 1
 */

export namespace ReactNativeFs {
  export const NAME = 'ReactNativeFs' as const

  export type MkdirOptionsT = {NSURLIsExcludedFromBackupKey?: boolean}
  
  export type StatResult = {ctime: number, mtime: number, size: number, mode: number, originalFilepath: string, type: number}
  
  export type DownloadResult = {jobId: number, statusCode: number, bytesWritten: number}
  
  export interface Spec {
    getConstants(): Object;
  
    readFile(path: string): Promise<string>;
  
    exists(path: string): Promise<boolean>;
  
    mkdir(path: string, options: MkdirOptionsT): Promise<void>;
  
    appendFile(path: string, contents: string, encoding: string): Promise<void>;
  
    writeFile(path: string, contents: string, encoding: string): Promise<void>;
  
    readFileAssets(path: string): Promise<string>;
  
    copyFile(from: string, into: string): Promise<void>;
  
    unlink(filepath: string): Promise<void>;
  
    hash(filepath: string, algorithm: string): Promise<string>;
  
    moveFile(filepath: string, destPath: string): Promise<void>;
  
    read(path: string, length: number, position: number): Promise<string>;
  
    write(filepath: string, contents: string, position: number): Promise<void>;
  
    stat(filepath: string): Promise<StatResult>;
  
    touch(filepath: string, mtime: number, ctime: number): Promise<boolean>;
  
    downloadFile(bridgeOptions: Object): Promise<DownloadResult>;
  
    readDir(dirpath: string): Promise<Object[]>;
  
    existsAssets(filepath: string): Promise<boolean>;
  
  }
}
